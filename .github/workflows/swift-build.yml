name: Swift/Metal Build and Validation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  swift-metal-build:
    name: Swift/Metal Compilation
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Determine change scope (paths-filter)
      id: changes
      uses: dorny/paths-filter@v3
      with:
        filters: |
          swift:
            - 'Package.swift'
            - 'Sources/**'
            - '**/*.swift'
            - 'Resources/communication/*.metal'
            - 'shaders/*.metal'
          docs:
            - '**/*.md'

    - name: Short-circuit if no Swift or shader changes on PR
      if: github.event_name == 'pull_request' && steps.changes.outputs.swift != 'true'
      run: |
        echo "No Swift/shader changes detected; skipping build."
        exit 0

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Cache Swift dependencies
      uses: actions/cache@v4
      with:
        path: |
          .build
          .swiftpm
          ~/Library/Caches/org.swift.swiftpm
        key: ${{ runner.os }}-swift-${{ hashFiles('Package.swift', 'Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-swift-
    
    - name: Check Swift version
      run: swift --version
    
    - name: Verify Metal compiler or skip validation
      run: |
        if xcrun -sdk macosx -f metal >/dev/null 2>&1; then
          xcrun -sdk macosx metal --version
          echo "Metal compiler available"
        else
          echo "Metal toolchain not present on runner; skipping shader validation"
          echo "SKIP_METAL=1" >> $GITHUB_ENV
        fi
    
    - name: Build with SwiftPM
      run: |
        echo "Building with Swift Package Manager..."
        swift build --configuration debug
        echo "✅ swift build completed"
    
    - name: Validate Metal shader files
      if: env.SKIP_METAL != '1'
      run: |
        echo "Validating Metal shader files..."
        SHADER_ERRORS=0
        
        for shader in shaders/*.metal Resources/communication/*.metal; do
          if [ -f "$shader" ]; then
            echo "Validating $shader..."
            if xcrun -sdk macosx metal -c "$shader" -o /tmp/$(basename "$shader" .metal).air; then
              echo "✅ $shader compiled successfully"
            else
              echo "❌ $shader failed to compile"
              SHADER_ERRORS=$((SHADER_ERRORS + 1))
            fi
          fi
        done
        
        if [ $SHADER_ERRORS -gt 0 ]; then
          echo "❌ $SHADER_ERRORS shader(s) failed to compile"
          exit 1
        else
          echo "✅ All Metal shader files compiled successfully"
        fi
    
    - name: Test built executable exists
      run: |
        echo "Checking built executable..."
        if [ -x ".build/debug/MetalShaderStudio" ]; then
          echo "✅ .build/debug/MetalShaderStudio exists"
          file .build/debug/MetalShaderStudio
        else
          echo "❌ .build/debug/MetalShaderStudio not found"
          exit 1
        fi
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: metal-shader-studio-build
        path: |
          .build/debug/MetalShaderStudio
          **/*.air
        retention-days: 7
    
    - name: Build summary
      run: |
        echo "## 🏗️ Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Swift compilation successful" >> $GITHUB_STEP_SUMMARY  
        echo "- ✅ Metal shaders validated" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ MetalShaderStudio executable created" >> $GITHUB_STEP_SUMMARY
        echo "- 📦 Build artifacts uploaded" >> $GITHUB_STEP_SUMMARY
